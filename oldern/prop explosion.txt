@name Prop Explosion
@persist Prop:entity Prop2:entity Prop3:entity Prop4:entity Sounds:array Materials:array Props:array Props2:array Props3:array Props4:array
@model models/hunter/blocks/cube025x025x025.mdl
if(first()){
}
runOnTick(1)
#[Strings]#
Sounds[0, string] = "ambient/explosions/explode_1.wav"
Sounds[1, string] = "ambient/explosions/explode_2.wav"
Sounds[2, string] = "ambient/explosions/explode_3.wav"
Sounds[3, string] = "ambient/explosions/explode_4.wav"
Sounds[4, string] = "ambient/explosions/explode_5.wav"
Sounds[5, string] = "ambient/explosions/explode_6.wav"
Sounds[6, string] = "ambient/explosions/explode_7.wav"
Sounds[7, string] = "ambient/explosions/explode_8.wav"
Sounds[8, string] = "ambient/explosions/explode_9.wav"
#[Variables]#
One = 0
Two = 0
P = owner()
E = entity()
C = changed(owner():keyUse())
E1 = owner():keyAttack2()
E2 = changed(owner():keyReload())
E3 = owner():keyAttack2()
L = P:aimPos()
if(C&$E1){
if(One)
{ 
    One = 0
}else{
PE = owner():aimEntity()
if(PE:type()=="prop_physics"){
    One = 1
}
if(PE:type()=="wire_expression2"){
    One = 1
}
if(PE:type()=="player"){
    One = 1
}
if(PE:type()=="npc_rollermine"){
    One = 1
}
if(PE:type()=="npc_turret_floor"){
    One = 1
}
if(PE:type()=="npc_alyx"){
    One = 1
}
if(PE:type()=="npc_barney"){
    One = 1
}
if(PE:type()=="npc_gman"){
    One = 1
}
if(PE:type()=="gmod_balloon"){
    One = 1
}
if(PE:type()=="gmod_wire_expression2"){
    One = 1
}
if(PE:type()=="gmod_wire_nailer"){
    One = 1
}
}
}
if(E2&E3){
    L
    Two = 1
}
if(One){
    PE:propBreak()
    PE:soundPlay(0,0,Sounds:string(round(random(8))))
    Prop = propSpawn("models/props_phx/torpedo.mdl", PE:pos()+(vec(0,0,0)), PE:eyeAngles(), 0)
    Prop2 = propSpawn("models/hunter/plates/plate.mdl", PE:pos()+(vec(0,0,0)), PE:eyeAngles(), 0)
    Prop3 = propSpawn("models/hunter/plates/plate.mdl", PE:pos()+(vec(0,0,0)), PE:eyeAngles(), 0)
    Prop4 = propSpawn("models/hunter/plates/plate.mdl", PE:pos()+(vec(0,0,0)), PE:eyeAngles(), 0)
    Prop:setMaterial("phoenix_stroms/chrome")
    Prop:propGravity(0)
    Prop:setTrails(random(1,50),1,0.5, "trails/smoke", vec(random(255),random(255),random(255)),250)
    Prop2:setMaterial("phoenix_stroms/chrome")
    Prop2:propGravity(0)
    Prop2:setTrails(random(1,50),1,0.5, "trails/smoke", vec(random(255),random(255),random(255)),250)
    Prop3:setMaterial("phoenix_stroms/chrome")
    Prop3:propGravity(0)
    Prop3:setTrails(random(1,50),1,0.5, "trails/smoke", vec(random(255),random(255),random(255)),250)
    Prop4:setMaterial("phoenix_stroms/chrome")
    Prop4:propGravity(0)
    Prop4:setTrails(random(1,50),1,0.5, "trails/smoke", vec(random(255),random(255),random(255)),250)
    Props:pushEntity(Prop)
    Props2:pushEntity(Prop2)
    Props3:pushEntity(Prop3)
    Props2:pushEntity(Prop4)
    timer("Delete",750)
    Prop:propBreak()
    }
    else{
        PE:propDelete()
    }
if(Two){
    Prop = propSpawn("models/props_phx/cannonball.mdl", +(L), E:eyeAngles(), 0)
    Prop2 = propSpawn("models/props_phx/ww2bomb.mdl", (L)+(vec(random(-120,120),random(-120,120),random(-120,120))), E:eyeAngles(), 0)
    Prop3 = propSpawn("models/props_phx/ww2bomb.mdl", (L)+(vec(random(-120,120),random(-120,120),random(-120,120))), E:eyeAngles(), 0)
    Prop4 = propSpawn("models/props_phx/ww2bomb.mdl", (L)+(vec(random(-120,120),random(-120,120),random(-120,120))), E:eyeAngles(), 0)
    Prop:setMaterial("phoenix_stroms/chrome")
    Prop:propGravity(0)
    Prop:setTrails(random(1,50),1,0.5, "trails/smoke", vec(random(255),random(255),random(255)),250)
    Prop2:setMaterial("phoenix_stroms/chrome")
    Prop2:propGravity(0)
    Prop2:setTrails(random(1,50),1,0.5, "trails/smoke", vec(random(255),random(255),random(255)),250)
    Prop3:setMaterial("phoenix_stroms/chrome")
    Prop3:propGravity(0)
    Prop3:setTrails(random(1,50),1,0.5, "trails/smoke", vec(random(255),random(255),random(255)),250)
    Prop4:setMaterial("phoenix_stroms/chrome")
    Prop4:propGravity(0)
    Prop4:setTrails(random(1,50),1,0.5, "trails/smoke", vec(random(255),random(255),random(255)),250)
    Props:pushEntity(Prop)
    Props2:pushEntity(Prop2)
    Props3:pushEntity(Prop3)
    Props2:pushEntity(Prop4)
    timer("Delete",750)
    Prop:propBreak()
    Prop2:propBreak()
    Prop3:propBreak()
    Prop4:propBreak()
    }

if(clk("Delete")
        & Props2:count()) {
    Props2:shiftEntity():propDelete()
    Props2:propDelete()
}
if(clk("Delete")
        & Props3:count()) {
    Props3:shiftEntity():propDelete()
    Props3:propDelete()
}
if(clk("Delete")
        & Props4:count()) {
    Props4:shiftEntity():propDelete()
    Props4:propDelete()
}