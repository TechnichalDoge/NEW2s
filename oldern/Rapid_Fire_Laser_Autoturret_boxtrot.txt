@name 
@inputs 
@outputs State:string
@persist Target:entity State:string Range Pew:entity Attack:wirelink Type:string Firemode:string Whitelist:array Players:array
@persist Targets:array
@trigger 

if (first()|dupefinished()) {
    findIncludeClass("player")
    
    ##[ CHIP CONFIG ]##
    Range = 500
    
    Type = "Rapid Fire Laser"
    
    HP = 2500
    
    Firemode = "Auto"
    #Auto, Semi
    
    Whitelist = array(owner(),
    findPlayerByName("Boxtrot"))
    
    IdleSound = "ambient/command_center.wav"
    AlertedSound = "common/warning.wav"
    FireSound = ""
    ##[ CHIP CONFIG ]##
    
    
    setName(Type + " Autoturret (" + Range + "u)")
    entity():setMass(HP)
    
    
    
    #BASE (by logica)
    
    holoCreate(3,entity():pos()+entity():up()*46)
    holoScale(3,vec(1,4,1.5))
    holoColor(3,vec(144,144,144))
    holoAng(3,ang(0,90,0))
    holoAng(3,ang())

    holoCreate(4,entity():pos()+entity():up()*50.5-entity():right()*30)
    holoScale(4,vec(1,1,0.75))
    holoColor(4,vec(144,144,144))
    holoAng(4,entity():angles())
    holoParent(4,3)

    holoCreate(5,entity():pos()+entity():up()*41.6-entity():right()*30)
    holoScale(5,vec(0.506,0.506,0.37506))
    holoModel(5,"models/hunter/triangles/05x05x05.mdl")
    holoColor(5,vec(144,144,144))
    holoAng(5,entity():angles()-ang(180,0,0))
    holoMaterial(5,"models/debug/debugwhite")
    holoParent(5,3)

    holoCreate(6,entity():pos()+entity():up()*50.5-entity():right()*-24)
    holoScale(6,vec(2,2,0.75))
    holoModel(6,"hq_cylinder")
    holoColor(6,vec(144,144,144))
    holoAng(6,entity():angles()-ang(90,0,0))
    holoParent(6,3)

    holoCreate(7,entity():pos()+entity():up()*46-entity():right()*30)
    holoScale(7,vec(0.8,0.8,1.2))
    holoModel(7,"hq_cylinder")
    holoColor(7,vec(144,144,144))
    holoAng(7,entity():angles()-ang(90,0,90))
    holoParent(7,3)

    holoCreate(8,entity():pos()+entity():up()*46-entity():right()*31)
    holoScale(8,vec(0.7,0.7,1.1))
    holoModel(8,"hq_cylinder")
    holoColor(8,vec(0,0,0))
    holoAng(8,entity():angles()-ang(90,0,90))
    holoParent(8,3)

    holoCreate(9,entity():pos()+entity():up()*46-entity():right()*20)
    holoScale(9,vec(1.5,1.5,0.3))
    holoModel(9,"hq_cylinder")
    holoColor(9,vec(144,144,144))
    holoAng(9,entity():angles()-ang(90,0,90))
    holoParent(9,3)

    holoCreate(10,entity():pos()+entity():up()*46-entity():right()*-10)
    holoScale(10,vec(1.5,1.5,0.3))
    holoModel(10,"hq_cylinder")
    holoColor(10,vec(144,144,144))
    holoAng(10,entity():angles()-ang(90,0,90))
    holoParent(10,3)
    
    
    holoCreate(11,entity():pos()+entity():up()*46-entity():right()*5)
    holoScale(11,vec(1.5,1.5,2))
    holoModel(11,"hq_cylinder")
    holoColor(11,vec(144,144,144))
    holoAng(11,entity():angles()-ang(90,0,90))
    holoParent(11,3)
    
    


    holoCreate(12,entity():pos()+entity():up()*12.5)
    holoModel(12,"hq_cone")
    holoScaleUnits(12,vec(35,35,25))
    holoColor(12,vec(144,144,144))
    holoParent(12,entity())
    
    holoCreate(13,entity():pos()+entity():up()*20)
    holoModel(13,"hq_cylinder")
    holoScaleUnits(13,vec(18,18,35))
    holoColor(13,vec(144,144,144))
    holoParent(13,12)


    holoCreate(14,entity():pos()+entity():up()*15)
    holoModel(14,"hq_cylinder")
    holoScaleUnits(14,vec(20,20,5))
    holoColor(14,vec(144,144,144))
    holoParent(14,12)

    holoCreate(15,entity():pos()+entity():up()*30)
    holoModel(15,"hq_cylinder")
    holoScaleUnits(15,vec(20,20,5))
    holoColor(15,vec(144,144,144))
    holoParent(15,12)

    holoCreate(16,entity():pos()+entity():up()*37.5)
    holoModel(16,"dome")
    holoScaleUnits(16,vec(18,18,20))
    holoColor(16,vec(144,144,144))
    holoParent(16,12)
    
    holoCreate(17,entity():pos()+entity():up()*37.5)
    holoModel(17,"hq_cylinder")
    holoScaleUnits(17,vec(35,18,5))
    holoColor(17,vec(144,144,144))

    
    
        
    
    

    
    #Muzzle Flash
    holoCreate(100,entity():pos()+vec(0,40,46))
    holoScale(100,vec(0.4,2,0.4))
    holoModel(100,"hq_sphere")
    holoDisableShading(100,1)
    holoAng(100,ang())
    holoColor(100,vec(255,0,0),144)
    holoParent(100,3)
    
    holoCreate(101,entity():pos()+vec(0,40,46))
    holoScale(101,vec(0.6,0.3,0.6))
    holoModel(101,"hq_sphere")
    holoDisableShading(101,1)
    holoAng(101,ang())
    holoColor(101,vec(255,0,0),144)
    holoParent(101,3)
    
    holoAlpha(100,0)
    holoAlpha(101,0)
    
    
    
    entity():soundPlay(0,0,IdleSound)
    
    
    findExcludeEntities(Whitelist)
    
    State = "Idle"
    
    timer("findtarget",500)
}elseif(clk("findtarget")) {
    foreach(I:number,K:entity=players()){
        if(!K:plyHasGod()){
            Targets:pushEntity(K)    
        }
        
    }
    foreach(I:number,K:entity=Targets){
        if(K:plyHasGod()){
            Targets:remove(I) 
        }
        
    }
    
    
    
    findInSphere(entity():pos(),Range)
    findIncludeEntities(Targets)
    findExcludeEntities(Whitelist)
    Target = findClosest(entity():pos())
    
    if (Target) {
    State = "Spotted"
    timer("mz",125)
    }else{
    State = "Idle"
    stoptimer("mz")
    stoptimer("mzov")
    holoAlpha(100,0)
    holoAlpha(101,0)
    }
    
    timer("findtarget",500)
}

if (clk("mz")) {
    holoAlpha(100,144)
    holoAlpha(101,144)
    
    timer("mzo",125)
}

if (clk("mzo")) {
    holoAlpha(100,0)
    holoAlpha(101,0)
    
    timer("mz",125)
}


if (State == "Idle") {
    holoAng(3,ang(0,sin(curtime()*50)*50,0))
}elseif (State == "Spotted") {
    Angle1 = ang(0,-90,0)-entity():heading(Target:pos())
    Angle2 = ang(Angle1:roll(),Angle1:yaw(),-Angle1:pitch())
    
    #print(Angle1)
    
    holoAng(17,ang(entity():angles():pitch()+90,90+Angle2:yaw(),0))    
    holoAng(3,Angle2)
    
    #print(round(Angle2))
}

interval(100)

if (Target) {
    
    #local Can_see = rangerOffset(Range,entity():pos()+vec(0,0,70),Target:pos()+vec(0,40,0))
    
    #if (!Can_see:hitWorld()) {
        
    if (!Pew) {
        Pew = pewCreate(Type,"models/items/combine_rifle_ammo01.mdl",entity():pos()+vec(0,0,50),ang(90,0,0)+((Target:pos()+vec(0,0,50))-(entity():pos()+vec(0,0,40))):normalized():toAngle())
        Attack = Pew:wirelink()
        Pew:propFreeze(1)
        entity():soundPlay(1,0,AlertedSound)
    }else{
        if (Pew) {
            Pew:setAng(ang(90,0,0)+((Target:pos()+vec(0,0,50))-(entity():pos()+vec(0,0,40))):normalized():toAngle())
            Attack["Fire",number] = 1
            
            if (Firemode == "Semi") {
            timer("rld",100)
            }
        }
    #}    
    }
}else{
Pew:propDelete()
Pew = noentity()
}

if (clk("rld")) {
    Attack["Fire",number] = 0
    stoptimer("rld")
}
