@name Measurer E2
@outputs Dist
@persist [Pos1 Pos2]:vector Step Hold Dist Printed
if (first()|duped()) {

####
# Measurer E2
# Made by Divran
# http://www.wiremod.com/forum/custom-gates/16081-divrans-e2-contraptions-thread.html
####

#Not really needed for such a small E2 :)
#concmd("say Measurer - Made by Divran")

runOnTick(1)
holoCreate(1)
holoModel(1,"hqicosphere2")
holoMaterial(1,"models/debug/debugwhite")
holoColor(1,vec(200,0,0))
holoScale(1,vec(3,3,3)/12)

holoCreate(2)
holoModel(2,"hqicosphere2")
holoMaterial(2,"models/debug/debugwhite")
holoColor(2,vec(200,0,0))
holoScale(2,vec(3,3,3)/12)

holoCreate(3)
holoModel(3,"hqcylinder2")
holoMaterial(3,"models/debug/debugwhite")
holoColor(3,vec(200,0,0))
holoScale(3,vec(1,1,1)/12)

}
Use = owner():keyUse()
Atk2 = owner():keyAttack2()
if (Use) {
if (!Hold) {
Hold = 1
Step++
if (Step == 3) {Step = 1}
if (Step == 1) {
Pos1 = owner():aimPos()
} elseif (Step == 2) {
Pos2 = owner():aimPos()
}
if (Pos1&Pos2&!Printed) {
Dist = (Pos1-Pos2):length()
print("Gmod Units: " + round(Dist,3) + " Meters: " + round(toUnit("m",Dist),3))
timer("Printed",1000)
Printed = 1
}
} else {
if (Step == 1) {
Pos1 = owner():aimPos()
} elseif (Step == 2) {
Pos2 = owner():aimPos()
}
if (Pos1) {
holoPos(1,Pos1)
}
if (Pos2) {
holoPos(2,Pos2)
}
if (Pos1&Pos2) { 
Dist = (Pos1-Pos2):length() 
if (!Printed) {
timer("PrintDistance",1000)
Printed=1
}
holoPos(3,(Pos1+Pos2)/2)
holoAng(3,(Pos1-Pos2):toAngle()+ang(90,0,0))
holoScale(3,vec(1,1,Dist)/12)
}
}
} else {
holoColor(Step,vec(200,0,0))
Hold = 0
}
if (changed(Atk2) & Atk2) {
if (owner():aimEntity()) {
print("Box Size: " + round(owner():aimEntity():boxSize(),3))
} else {
print("You're not aiming at an entity.")
}
}
if (clk("PrintDistance")) {
print("Gmod Units: " + round(Dist,3) + " Meters: " + round(toUnit("m",Dist),3))
Printed = 0
} elseif (clk("Printed")) {Printed=0}
