@name GunAng2.5
@inputs Gun:wirelink CamController:wirelink Chair:entity EGP:wirelink
@outputs Angles:angle
@persist AngleU:number AngleD:number Angles:angle Target:vector2 Locality:vector2 DistX:number DistY:number EPos:vector Yaw:number Grav:number Veloc:number GunMeanAngles:angle GunMoveSpeed:number
@persist FB:number LR:number UD:number CamSpeed:number CamHeight:number CamPos:vector CamMax:number Chair:entity Active:number Driver:entity DirectionFlicker:number
@persist Controls:table GunE:entity Fire:number Inactive:number FireLocation:vector
runOnTick(1)

if(first()||dupefinished()||Chair:driver() == noentity()){
    #Controls
    Controls["Up",string] = "Space"
    Controls["Down",string] = "Shift"
    Controls["Left",string] = "A"
    Controls["Right",string] = "D"
    Controls["Forward",string] = "W"
    Controls["Back",string] = "S"
    Controls["Fire",string] = "MOUSE1"
    Controls["Change Angle",string] = "MOUSE2"
    
    
    CamSpeed = 5
    CamHeight = 1000
    CamPos = vec(0,0,CamHeight)
}

Driver = Chair:driver()
Active = Driver != noentity()
runOnKeys(Driver,Active)

if(!Active){
    timer("inactivate",250)
}
if(clk("inactivate")){
    Inactive = 1
} else{
    Inactive = 0
}

if(!Inactive){
    GunE = Gun["Cannon",entity]
    Veloc = GunE:pewSpeed()
    Grav = GunE:pewGravity()
    EPos = GunE:pos()
    CamMax = (Veloc^2)/Grav
    
    if(Driver:keyPressed(Controls["Fire",string])){
        Gun["Fire",number] = 1    
    } else{
        Gun["Fire",number] = 0
    }
    
    if(Driver:keyPressed(Controls["Change Angle",string])){
        DirectionFlicker += 1  
    }
    DirectionFlicker = DirectionFlicker % 2
    
    if(!((CamPos + Chair:pos()):isInWorld()) || CamController["Trace",ranger]:distance() > 50000){
        CamPos = CamPos + vec(0,0,100)    
    }
    elseif(Chair:pos():distance(CamController["HitPos",vector]) < CamMax){
        CamPos = CamPos + vec(LR,FB,UD)
    }
    
    UD = (Driver:keyPressed(Controls["Up",string]) - Driver:keyPressed(Controls["Down",string])) * CamSpeed
    FB = (Driver:keyPressed(Controls["Forward",string]) - Driver:keyPressed(Controls["Back",string])) * CamSpeed
    LR = (Driver:keyPressed(Controls["Right",string]) - Driver:keyPressed(Controls["Left",string])) * CamSpeed
    
    CamController["Activated",number] = Active
    CamController["Angle",angle] = ang(90,90,0)
    CamController["Parent",entity] = Chair
    CamController["Position",vector] = CamPos
    
    FireLocation = CamController["HitPos",vector]
    
    Locality = (vec2(FireLocation) - vec2(EPos))
    Dists = vec2( sqrt(Locality:x()^2+Locality:y()^2) , FireLocation:z() - EPos:z() )
    Yaw = atan(Locality:y(),Locality:x())+180
    AngleU = atan((Veloc^2+sqrt(Veloc^4 - Grav*(Grav*Dists:x()^2+2*Dists:y()*Veloc^2)))/(Grav*Dists:x()))-90
    AngleD = atan((Veloc^2-sqrt(Veloc^4 - Grav*(Grav*Dists:x()^2+2*Dists:y()*Veloc^2)))/(Grav*Dists:x()))-90
    
    if(DirectionFlicker == 0){
        Angles = ang(AngleU,Yaw,0)
    }
    elseif(DirectionFlicker == 1){
        Angles = ang(AngleD,Yaw,0)
    }
    
    if(GunE:angles():yaw() < Angles:yaw()){
        GunMeanAngles += ang(0,0.3,0)   
    }
    if(GunE:angles():yaw() > Angles:yaw()){
        GunMeanAngles += ang(0,-0.3,0)    
    }
    if(GunE:angles():pitch() < Angles:pitch()){
        GunMeanAngles += ang(0.1,0,0)    
    }
    if(GunE:angles():pitch() > Angles:pitch()){
        GunMeanAngles += ang(-0.1,0,0)    
    }
    
    GunE:setAng(GunMeanAngles)
    
    
    
    
    #[
    holoCreate(1,EPos)
    holoPos(1,EPos+vec(Dists:x()/2*cos(Yaw),Dists:x()/2*sin(Yaw),0))
    holoAng(1,ang(0,Yaw,0))
    holoScaleUnits(1,vec(Dists:x(),10,10))
    holoCreate(2,EPos+vec(Dists:x()*cos(Yaw),Dists:x()*sin(Yaw),Dists:y()/2))
    holoScaleUnits(2,vec(10,10,Dists:y()))
    
    ]#
}
