@name e2aim
@inputs Prop:entity
@outputs Targs:array
@persist Targs:array WherTar:vector Ang:angle Pos:vector Ang2:angle
if(first()){
    timer("start",15)
    function array removeEmptEnt(Arr:array){
        local H = array()
        foreach(I,V:entity = Arr){
            if(V != noentity()){
                H:pushEntity(V)    
            }    
        }
        return H
    }
}
if(clk("checkplayers")|clk("start")){
    findByClass("npc_*")
    local NPCS = findToArray()
    #for(I=1,getPvpers():count()){
    for(I=1,NPCS:count()){
        local V = NPCS[I,entity]
        #local V = getPvpers()[I,entity]
        #if(!(V == owner())){
            if(!Targs:exists(V:id()) || Targs[V:id(),entity] != V){
                Targs:setEntity(V:id(),V)
            }
            elseif(!V:isAlive()){
                Targs:remove(V:id())
            }
        #}
    }
    for(I=1,Targs:count()){
        if(Targs[I,entity]:id() != I){
            Targs:removeEntity(I)    
        }    
    }
    timer("checkplayers",15)
    timer("moveangleProp",15)
}
if(clk("moveangleProp")){
    Prop:propGravity(0)
    local Dista = 125
    local Targetit = removeEmptEnt(Targs)[1,entity]
    WherTar = (Targetit:shootPos())
    local Locality = (WherTar - owner():shootPos()):normalized() * Dista
    Ang = (WherTar - owner():shootPos()):normalized():toAngle():setRoll(0) + ang(0,0,0)
    #Pos = (((owner():shootPos() + Locality) - Prop:pos()))
    Pos = (owner():shootPos() + Locality)
    Prop:setPos(Pos)
    #Prop:applyForce(Pos*10)
    Prop:setAng(Ang)
    #Prop:setAng(Ang)
    #Prop:setAng(Ang)
    #Prop:keepUpright(Ang,0,1)
    timer("checkplayers",15)
}
